HA$PBExportHeader$w_r_liste_males_a_recolter_abrege.srw
forward
global type w_r_liste_males_a_recolter_abrege from w_rapport
end type
end forward

global type w_r_liste_males_a_recolter_abrege from w_rapport
integer x = 214
integer y = 221
string title = "Rapport - Liste des m$$HEX1$$e200$$ENDHEX$$les $$HEX2$$e0002000$$ENDHEX$$r$$HEX1$$e900$$ENDHEX$$colter - Abr$$HEX1$$e900$$ENDHEX$$g$$HEX1$$e900$$ENDHEX$$e"
end type
global w_r_liste_males_a_recolter_abrege w_r_liste_males_a_recolter_abrege

on w_r_liste_males_a_recolter_abrege.create
call super::create
end on

on w_r_liste_males_a_recolter_abrege.destroy
call super::destroy
if IsValid(MenuID) then destroy(MenuID)
end on

event pfc_postopen;call super::pfc_postopen;//Pr$$HEX1$$e900$$ENDHEX$$parer les donn$$HEX1$$e900$$ENDHEX$$es

long		ll_cpt, ll_rowcount, ll_jour, ll_nb, ll_cpt_rendu = 1, ll_rtn, ll_count
string	ls_codeverrat, ls_affichage, ls_sql
date		ld_cur, ld_de

ld_de = date(gnv_app.inv_entrepotglobal.of_retournedonnee("lien date"))
gnv_app.inv_entrepotglobal.of_ajoutedonnee("lien date", "")

gnv_app.of_dolistemale( ld_de)

INSERT INTO #Tmp_Recolte_ValiderDelai ( DATE_valider, CodeVerrat )
SELECT 
max(#Tmp_Recolte.DATE_recolte) AS DernierDeDATE, 
#Tmp_Recolte.CodeVerrat 
FROM t_CentreCIPQ 
INNER JOIN (t_Verrat 
INNER JOIN #Tmp_Recolte 
ON (t_Verrat.CIE_NO = #Tmp_Recolte.CIE_NO) AND ((t_Verrat.CodeVerrat) = (#Tmp_Recolte.CodeVerrat))) 
ON t_CentreCIPQ.CIE = #Tmp_Recolte.CIE_NO 
WHERE t_Verrat.ELIMIN Is Null
GROUP BY #Tmp_Recolte.CodeVerrat, 
#Tmp_Recolte.CIE_NO, 
t_Verrat.CodeRACE, 
t_Verrat.Sous_Groupe, 
#Tmp_Recolte.TYPE_SEM,
t_Verrat.Emplacement, 
t_Verrat.TATOUAGE, 
t_Verrat.Classe ;
Commit using SQLCA;

n_ds lds_valider_delai

lds_valider_delai = CREATE n_ds
lds_valider_delai.dataobject = "ds_valider_delai"
lds_valider_delai.of_setTransobject(SQLCA)
ll_rowcount = lds_valider_delai.retrieve() 
FOR ll_cpt = 1 TO ll_rowcount
	ls_codeverrat = lds_valider_delai.object.codeverrat[ll_cpt]
	ld_cur = date(lds_valider_delai.object.date_valider[ll_cpt])
	ll_jour = gnv_app.of_getdelaitocome(ls_codeverrat, ld_cur, ld_de)
	lds_valider_delai.object.delai[ll_cpt] = ll_jour
END FOR
lds_valider_delai.update(TRUE,TRUE)
IF IsValid(lds_valider_delai) THEN DESTROY (lds_valider_delai)

DELETE FROM #Tmp_Recolte
FROM #Tmp_Recolte_ValiderDelai  
WHERE #Tmp_Recolte_ValiderDelai.Delai = 0 
AND (#Tmp_Recolte.CodeVerrat) = (#Tmp_Recolte_ValiderDelai.CodeVerrat) ;
Commit using SQLCA;

ls_sql = "drop table #Tmp_Recolte_ValiderDelai"
EXECUTE IMMEDIATE :ls_sql USING SQLCA;

//2008-11-24 ajouter parce que ca balancait pas avec les disponibles
//2008-11-26 Revenir en arri$$HEX1$$e800$$ENDHEX$$re
gnv_app.of_DoEpurerListeMale(ld_de)

dw_preview.of_SetTri(TRUE)

dw_preview.inv_filter.of_setvisibleonly( FALSE)
dw_preview.event pfc_filterdlg()

SetPointer(Hourglass!)

ll_nb = dw_preview.Retrieve(ld_de,0)

//Suite au retrieve, il faut grouper par section
IF ll_nb > 0 THEN
	FOR ll_cpt = 1 TO ll_nb
		//Mettre le compute
		IF ll_cpt > 1 THEN
			IF dw_preview.object.famille[ll_cpt] = dw_preview.object.famille[ll_cpt - 1] THEN
				ll_cpt_rendu ++
			ELSE
				ll_cpt_rendu = 1
			END IF
		END IF
		
		ls_affichage = string(ll_cpt_rendu) + " / " + string(dw_preview.object.cf_count_famille[ll_cpt] )
		dw_preview.object.cc_x_de_y[ll_cpt] = ls_affichage
		//dw_preview.object.new_page_flag[ll_cpt] = 1
	END FOR
	
	//Changer le sort
	ll_rtn = dw_preview.SetSort("cie_no asc, section asc, coderace asc, sous_groupe asc, classe asc, dernierdedate asc, date2 asc, codeverrat asc")
	ll_rtn = dw_preview.Sort()
	
	//S$$HEX1$$e900$$ENDHEX$$bast - $$HEX1$$c700$$ENDHEX$$a l'air d'$$HEX1$$ea00$$ENDHEX$$tre du code de bat mais c'est le seul ordre d'ex$$HEX1$$e900$$ENDHEX$$cution qui fuck pas les 
	//computed field
	FOR ll_cpt = 1 TO ll_nb
		dw_preview.object.new_page_flag[ll_cpt] = 1
	END FOR
	
	dw_preview.GroupCalc()

END IF
end event

type dw_preview from w_rapport`dw_preview within w_r_liste_males_a_recolter_abrege
string dataobject = "d_r_liste_males_a_recolter_abrege"
end type

